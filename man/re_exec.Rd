% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exec.R
\name{re_exec}
\alias{re_exec}
\title{First regular expression match and positions}
\usage{
re_exec(text, pattern, ...)
}
\arguments{
\item{text}{Character vector.}

\item{pattern}{A PCRE regular expression. See \code{\link[base]{regex}}
for more about regular expressions.}

\item{...}{Additional arguments to pass to
\code{\link[base]{regexpr}}.}
}
\value{
A data frame with list columns. See the details below.
}
\description{
Match a regular expression to a string, and return the first match,
match positions, and also capture groups, if any.
}
\details{
The results are returned in a data frame with list columns. The strings
of the character vector correspond to the rows of the data frame.
The columns correspond to capture groups and the first matching
(sub)string. The columns of named capture groups are named accordingly,
and the column of the full match if the last column and it is named
\code{.match}.

Each column of the result is a list, containing match records.
A match record is a named list, with entries \code{match}, \code{start}
and \code{end}; the matching (sub) string, the start and end positions
(using one based indexing).

Non-matching strings contain NAs in their corresponding rows, for the
matches and the positions as well.
}
\examples{
name_rex <- paste0(
  "(?<first>[[:upper:]][[:lower:]]+) ",
  "(?<last>[[:upper:]][[:lower:]]+)"
)
notables <- c(
  "  Ben Franklin and Jefferson Davis",
  "\\tMillard Fillmore"
)
re_exec(notables, name_rex)
}
\seealso{
Other tidy.regular.expression.matching: \code{\link{re_exec_all}},
  \code{\link{re_match_all}}, \code{\link{re_match}}
}

